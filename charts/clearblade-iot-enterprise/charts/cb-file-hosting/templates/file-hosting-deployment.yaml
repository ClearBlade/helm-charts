apiVersion: apps/v1
kind: Deployment
metadata:
  name: cb-file-hosting
  namespace: {{ default "clearblade" .Values.global.namespace }}
  labels:
    app: cb-file-hosting
spec:
  selector:
    matchLabels:
      app: cb-file-hosting
  replicas: 1
  template:
    metadata:
      labels:
        app: cb-file-hosting
        app.kubernetes.io/name: managed-prom
    spec:
      {{- if .Values.global.imagePullerSecret }}
      imagePullSecrets:
        - name: gcr-json-key
      {{- end }}
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 0
      volumes:
        - name: file-hosting-data
          persistentVolumeClaim:
            claimName: cb-file-hosting-pvc
      containers:
        - name: cb-file-hosting
          {{- if .Values.imageURL }}
          image: {{- .Values.imageURL }}
          {{- else }}
          image: "gcr.io/api-project-320446546234/file_hosting:{{ .Values.global.enterpriseConsoleVersion }}"
          {{- end }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: file-hosting-data
              mountPath: /data
          env: 
            - name: BASE_DIR
              value: "/data"
            - name: PORT
              value: "80"
          resources:
            requests:
              memory: {{ .Values.requestMemory }}
              cpu: {{ .Values.requestCPU }}
            limits:
              cpu: {{ .Values.limitCPU }}
              memory: {{ .Values.limitMemory }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ .Values.global.tolerations | toYaml | indent 6 }}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
        {{ .Values.global.nodeSelector }}
      {{- end }}