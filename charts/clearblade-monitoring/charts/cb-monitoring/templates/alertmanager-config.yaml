{{- if .Values.alerts.slack.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager
  namespace: {{ default "monitoring" .Values.global.namespace }}
stringData:
  alertmanager.yml: |
    global:
      resolve_timeout: 1m
      smtp_smarthost: '{{ .Values.alerts.email.smtp.smarthost }}'
      smtp_from: '{{ .Values.alerts.email.smtp.from }}'
      smtp_auth_username: '{{ .Values.alerts.email.smtp.username }}'
      smtp_auth_password: '{{ .Values.alerts.email.smtp.password }}' 

    route:
      group_by: ['alertname']

      # how long to wait and see if other alerts get added to the group before firing
      group_wait: 1m

      # how long to wait for more alerts if one gets added to the group after after initial firing
      group_interval: 1m

      # how long to wait to re-fire the alert if it's still alerting
      repeat_interval: 1h

      receiver: 'lowReceiver'

      routes:
        - match:
            priority: 'low'
          receiver: 'lowReceiver'
        - match:
            priority: 'high'
          receiver: 'highReceiver'
        

    receivers:

    - name: 'highReceiver'
      slack_configs:
      - channel: {{ .Values.alerts.slack.channelHigh }}
        api_url: '{{ .Values.alerts.slack.webhookHigh }}'
        text: "{{ "{{" }} range .Alerts }}{{ "{{" }} .Annotations.summary }}\n{{ "{{" }} end }}"
        send_resolved: true
      email_configs:
        - to: '{{ .Values.alerts.email.high }}'
          send_resolved: true

    # default receiver if no labels on alert
    - name: 'lowReceiver'
      slack_configs:
      - channel: {{ .Values.alerts.slack.channel }}
        api_url: '{{ .Values.alerts.slack.webhook }}'
        text: "{{ "{{" }} range .Alerts }}{{ "{{" }} .Annotations.summary }}\n{{ "{{" }} end }}"
        send_resolved: true
      email_configs:
        - to: '{{ .Values.alerts.email.low }}'
          send_resolved: true
{{- end }}
