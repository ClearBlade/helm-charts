global
  maxconn 524000
  maxconnrate 500
  max-spread-checks 2000 # sends all health checks within a 2s window, rather than using "inter" which we have set to 10s. matches behavior from before changing "inter" value.
  nbthread 1
  log stdout format raw local0 debug
  {{- if not .Values.useDefaultCiphers }}
  tune.ssl.default-dh-param 2048
  ssl-default-bind-options ssl-min-ver TLSv1.0
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA
  ssl-default-server-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA
  ssl-default-server-options ssl-min-ver TLSv1.0
  {{- end }}

defaults
  mode    http
  maxconn 524000
  timeout connect 5s
  timeout http-request 5s
  timeout client 120s
  timeout server 600s
  option dontlognull
  errorfile 408 /dev/null # for the chrome pre-connect bug
  #errorfile 502 /usr/local/etc/haproxy/errors/502.json
  #errorfile 503 /usr/local/etc/haproxy/errors/503.json
  #errorfile 504 /usr/local/etc/haproxy/errors/504.json

frontend http
  mode http
  log global
  option httplog
  option http-server-close # wrong acl was being selected on small percentage of requests. https://stackoverflow.com/questions/12843023/haproxy-sometimes-selects-wrong-acl
  bind *:8080
  http-request capture req.hdrs len 512
  log-format '{"message":"%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %r","severity":"INFO","remote_addr":"%ci","status":%ST,"response_time":%Td,"request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV","response_size":%B,"request_size":%U,"backend_name":"%b","server_name":"%s","frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","referer":"%[capture.req.hdr(1),json(utf8s)]"}'
  redirect scheme https code 301 if !{ ssl_fc }

listen stats
  bind *:9876
  mode http
  log global
  log-format '{"message":"%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %r","severity":"INFO","remote_addr":"%ci","status":%ST,"response_time":%Td,"request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV","response_size":%B,"request_size":%U,"backend_name":"%b","server_name":"%s","frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","referer":"%[capture.req.hdr(1),json(utf8s)]"}'
  option httplog
  option dontlog-normal
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /haproxy_stats
  stats auth {{ .Values.stats_auth }}

{{- if eq (default .Values.global.gmpEnabled false) false }}
listen prometheus
  bind *:8443 ssl crt /etc/ssl/
  mode http
  log global
  log-format '{"message":"%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %r","severity":"INFO","remote_addr":"%ci","status":%ST,"response_time":%Td,"request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV","response_size":%B,"request_size":%U,"backend_name":"%b","server_name":"%s","frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","referer":"%[capture.req.hdr(1),json(utf8s)]"}'
  option httplog
  option dontlog-normal
  acl AuthOkay_Prometheus http_auth(prometheus-access-list)
  http-request auth realm Prometheus if !AuthOkay_Prometheus
  server prometheus prometheus-frontend.{{ default "clearblade" .Values.global.namespace }}.svc.cluster.local:9090 check inter 10000
{{- else}}

listen prometheus-managed
  bind *:9000 ssl crt /etc/ssl/
  mode http
  log global
  log-format '{"message":"%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %r","severity":"INFO","remote_addr":"%ci","status":%ST,"response_time":%Td,"request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV","response_size":%B,"request_size":%U,"backend_name":"%b","server_name":"%s","frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","referer":"%[capture.req.hdr(1),json(utf8s)]"}'
  option httplog
  option dontlog-normal
  acl AuthOkay_Prometheus http_auth(prometheus-access-list)
  http-request auth realm Prometheus if !AuthOkay_Prometheus
  server prometheus prometheus-managed.{{ default "clearblade" .Values.global.namespace }}.svc.cluster.local:9090 check inter 10000
{{- end }}

userlist prometheus-access-list
  user {{ .Values.prometheus.user }} password {{ .Values.prometheus.sha256password }}

{{- if .Values.grafanaEnabled }}
listen grafana
  bind *:3000 ssl crt /etc/ssl/
  mode http
  log global
  log-format '{"message":"%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %r","severity":"INFO","remote_addr":"%ci","status":%ST,"response_time":%Td,"request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV","response_size":%B,"request_size":%U,"backend_name":"%b","server_name":"%s","frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","referer":"%[capture.req.hdr(1),json(utf8s)]"}'
  option httplog
  option http-server-close
  server grafana-deployment grafana.{{ default "clearblade" .Values.global.namespace }}.svc.cluster.local:3000 check inter 10000 port 3000
{{- end}}
